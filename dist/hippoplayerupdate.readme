Short: Updated HippoPlayer, a module player for classic Amigas
Author: kpk@iki.fi (K-P Koljonen)
Uploader: kpk@iki.fi (K-P Koljonen)
Type: mus/play
Version: 2.48
Architecture: m68k-amigaos >= 1.2

Hello!

Here you will find binaries with changes done after the original
development stopped. 

To use, copy the files over the files that you have from an existing
installation. Check out aminet for the original package:
https://aminet.net/mus/play/hippoplayer.lha

Or, just copy HiP somewhere and "HippoPlayer.group" to S:, then run
HiP. That should work if you have the "reqtools.library" installed. 

NOTE 1: The original archive is in its original state. There is no
updated documentation. Please read the change history below.

NOTE 2: Ensure that "HippoPlayer.group" gets updated, as old versions will
not work. The default placement is the S: directory, which is a bit silly
(location can be changed in Prefs). You can also place the file in the 
same directory with the HiP binary, too, if you're using kick2.0 or newer.

NOTE 3: If you get errors where some module is not recognized even 
if it should be, try removing "S:HippoPlayer.prefs" first.

------------------------------------------------------------------------------
------------------------------------------------------------------------------

# Changes from v2.47 (31.8.2021) to v2.48 (?.?.2021)

In this episode, we will be trying to play them all!

## New fixes:
- File and directory scan was refactored and is now much more robust.
  This fixes some bugs caused by very long path names and
  some other corner cases, such as uncommon directory types.
  Subdirectories will also be added in alphabetical order.
  Thanks to Zoltar of the English Amiga Board for reporting 
  a nasty bug and testing a bunch of desperate fixes. 
- Fix crash caused by a devious ProTracker module "Sunday Hangover" by 
  Skope/UpRough. The modules uses the "EFF" command without a sample,
  which is unexpected. Also crashes ProTracker v2.3d and other apps.
- After playing a DeliCustom type module and then trying to play a 
  XPK/PP/FImp/XFD compressed module lead to the new module being recognized 
  as DeliCustom even if it wasn't, which lead to all kinds of bad things.
- Fixed the case where favorites were not saved if the user exited while 
  being in the favorites view. 
- If the XFDMaster library was enabled, DeliCustom modules were not
  recognized. 
- For lists with only list dividers the selection would sometimes 
  go looping around the list and never stopping, making Hippo 
  unresponsive.
- A new method of calculating the window bar height is now used.
  This should fix the VisualPrefs related bug where adjusting
  window and screen title bar heights caused Hippo to add extra
  vertical space at the top part of the window.
- A few other minor issues fixed.
 
## New features:
- Patternscope XL, with twice the amount of rows. 
  Generally patternscope should use much less CPU now.
- Dual monitor support is now possible with P96. In such case
  Hippo may think the scopes are invisible and stop updating them.
  Clicking the left mouse button in the scope window will 
  reactivate the scope.
- Limited Eagleplayer plugin support. Hippo is now able to use
  some eagleplayers for music playback. A set of Hippo compatible
  eagleplayers have been included into the group file, so there is
  no need to search and install the correct versions. 
  See below for more info.
- The "HippoPlayer.group" file, which is basically a compressed
  archive, on kick2.0 or newer, is now searched first from PROGDIR:, 
  then the default (or configured) location. Therefore it can be kept 
  alongside the main Hippo binary.
- NOTE! The group file is now larger than before. It's a good idea
  on low memory systems to set the group mode to "Load single" 
  in "Prefs/Play-1/Mode", so that that the group file is not kept
  in memory fully. 
- Group file data compression was changed from File Imploder to
  Shrinkler by Blueberry as an experiment. Much better compression
  ratio, slower decompression.

## Music format related fixes
- Improved JamCracker support: added volume control and position/length info.
   - Also fixed an annoying audible *BEEP* once in a while.
     (Empty sample data was not in chip mem, my fault.)
-  FutureComposer (both old and new formats) now support position/length info.
   FC1.4 replayer changed to another and a modified a bit,
   hopefully now works better with "rsi theme.fc".
- Oktalyzer now also has position/length info and can be paused, which 
  previously wasn't possible.

## New music formats:
- PreTracker by Pink/aBYSs. Very noice! Samples are generated during 
  initialization which may take some time especially on slow CPUs.
- SonicArranger
  - Now supports more variants, previously only the compact form was 
    supported. Adaptation based on Wanted Team sources.
- CustomMade
  - "Battle Squadron"
  - Songs composed by Ron Klaren. Adaptation based on Wanted Team sources.
- Dave Lowe
  - Just wanted to hear Hippo play the "International Karate+" title music. 
  - Adaptation based on Wanted Team sources.
- DeliTracker Custom format improvements, adds support for modules 
  with external samples:
  - SUNTronic modules (from SUNTronicTunes.lha). Smooth!
    Check out "spring.src", this uses the Paula FM/AM channel modulation
    feature, which is very rarely heard. 
    Google for "SUNTronicTunes.lha" to get all SUNTronic tunes, 
    adapted by Peter Kunath of the DeliTracker team.
  - ModsAnthology/Synth/Custom/CUST.Lemmings now works, too.
- GlueMon (properly retro sound)
   - Tunes from Mahoney & Kaktus music disk "His Master's Noise".
- SoundFX (some nice ones in there)
   - Listen to "waterfall.sfx"
- StarTrekker AM (pretty crunchy)
  - Audio Sculpture modules are also recognized as StarTrekker modules.
    The replay routine is almost identical, but not quite, 
    so may not play perfectly.
  - Recommended listen (since M.U.L.E. rules): "the-real-mule2.mod" 
- Voodoo Supreme Synthesizer
  - An obscure synth format. 
  - Based on eagleplayer by Buggs/DEFECT. Some bug fixing was needed for 
    this, plenty of illegal memory reads were happening.

## Supported Eagleplayer formats, plugin name in parentheses:
- SynTracker ("syntracker")
  - Eagleplayer by Eagleeye/DEFECT
- AProSys ("aprosys")
  - Original sounding synth tunes.
  - Some modules cause illegal memory read enforcer hits.
  - Eagleplayer by Delirium & Buggs/DEFECT
- In Stereo! 1.0 ("in stereo 1.0")
  - Eagleplayer by Eagleeye/DEFECT
- In Stereo! 2.0 ("in stereo 2.0")
  - Eagleplayer by Eagleeye/DEFECT
- Synthesis ("synth 4.0")
  - Nice synth sounds in the three above formats!
  - It seems that In Stereo!, Synthesis and SonicArranger are related,
    all mention Carsten Herbst in credits.
  - Eagleplayer by Eagleeye/DEFECT
ChipTracker ("chiptracker")
  - Also known as KRISTracker.
  - Tunes by 4-Mat.
  - Eagleplayer by Wanted Team
- Jochen Hippel 7v ("jochen hippel 7v")
  - Seven channel Hippel experience.
  - Eagleplayer by Wanted Team
- Jochen Hippel ST ("jochen hippel st")
  - Hippel tunes from the Atari ST. Hippel quality!
  - Not all tunes (that I found) are supported.
  - Eagleplayer by Wanted Team
- Rob Hubbard 2 ("rob hubbard 2")
  - Many Infogrames games used this, eg. the "Flood" title tune.
  - Eagleplayer by Eagleeye/DFT & Wanted Team
- Richard Joseph/VectorDean ("richard joseph player")
  - "Chaos Engine"
  - This format has two names depending on where you look, 
    VectorDean and Richard Joseph.
  - Eagleplayer by Wanted Team
- Richard Joseph ("richard joseph")
  - "Speedball 2"
  - A different Richard Joseph format.
  - Eagleplayer by Wanted Team
- TCBTracker ("tcb tracker")
  - Richard Joseph tunes from the ST, such as "Magic Pockets". 
  - Eagleplayer by Meynaf and Wanted Team 
- Quartet ("quartet") and Quartet ST ("quartet st")
  - Atari ST originated format, interesting to hear these on Amiga.
  - Eagleplayers by Wanted Team
- Jason Brooke ("jason brooke")
  - "Space Harrier"
  - Eagleplayer by Wanted Team
- Activision Pro ("activision pro")
  - Some of these crash, disabling CPU caches may help.
  - "R-Type 2"
  - Eagleplayer by Eagleeye/DEFECT
- Wally Beben ("wally beben")
  - "Elite", "Hawkeye"
  - Eagleplayer by Wanted Team
- Jeroen Tel ("jeroen tel")
  - "Unreal"
  - Eagleplayer by Wanted Team
- Rob Hubbard ("rob hubbard")
  -  "Budokan"
  - Eagleplayer by EagleeEye/DFT & Wanted Team
- Sonix Music Driver ("sonix music driver")
  - File prefixes: SMUS.*, TINY.*, SNX.*
  - These definitely have a sound of their own. A note based
    editor, not a tracker.
  - Instruments are separate files.
  - Many beautiful adaptations of classical music.
  - "California Games"
  - Eagleplayer by Wanted Team
- Digital Mugician II ("mugician ii")
  - Seven voices.  
  - Eagleplayer by Wanted Team
- StoneTracker ("eaglestone")
  - One of the newer 4-8 channel Amiga trackers.
  - These don't work on kick1.3 and/or 68000, I think.
  - To play these, additional libraries are needed in LIBS:
    - stoneplayer.library, stonepacker.library
    - These can be found in the StoneTracker aminet archive.
  - These modules have a separate sample data file which needs to be
    correctly named for the eagleplayer to find it, by prepending "sps."
    to the sample file name.
    Example:
    - Module name: "spm.hypnosphere" 
    - Sample file: "sps.hypnosphere"
  - Eagleplayer by Emmanuel Marty, author of StoneTracker
- MusicMaker V8 ("musicmaker4", "musicmaker8")
  - 4-8 channel modules. 
  - Format with multiple files per module not supported.
  - MM8 has recently been updated, which is cool.
  - Eagleplayers by Thomas Winischhofer, the author of MusicMaker
- MaxTrax ("maxtrax")
  - Eagleplayer by Wanted Team
- SoundControl ("soundcontrol")
  - Eagleplayer by Wanted Team
- Synth Pack
  - Synth enabled format by the legendary Sound Tracker creator Karsten Obarski.
  - These tunes are worth checking out.
  - Eagleplayer by Wanted Team
- EarAche 
  - An obscure synth format with apparently only three modules in existence.
  - Eagleplayer by Wanted Team
- The Musical Enlightenment
  - Yet another obscure synth format.
  - Eagleplayer by Wanted Team
- Face The Music
  - 8 channel format.
  - This one does some illegal memory reads from audio interrupts sometimes.
  - Eagleplayer by Buggs of DEFECT
- Kris Hatlelid 
  - "Test Drive II"
  - Eagleplayer by Wanted Team
- Tim Follin
  - "Ghouls 'n' Ghosts"
  - Eagleplayer by Andy Silva and Buggs/DEFECT 
 
## Tips 
- A nice place for exotic modules is the FTP server Modland. 
- Eagleplayers can be found on aminet and on the Wanted Team web page. 
  Many modules are also available there.

## Thanks and greetings to:
- Spot/UpRough for beta testing and music format related assistance.
- Marek Hac for beta testing.
- Wanted Team for Eagleplayer resources.
- Authors of all the included eagleplayers, I hope you don't mind!


------------------------------------------------------------------------------
------------------------------------------------------------------------------

# Changes from v2.46b (15.6.2021) to v2.47 (31.8.2021)

Here's another version, since Amiga is fun :-) In this one: new exotic
music formats, favorite modules feature, enhanced kickstart 1.3
support, some fixes. Check out the details below. 

## New fixes:
- Fixed two serious crash bugs introduced in v2.46b. When starting to play the 
  next module (especially by double clicking) Hippo could get confused
  and crash. These problems were very likely to happen especially on OS 3.2. 
- Tooltip fixes for buttons *Del*, *Pr*. Also increase tooltip delay a
  little bit.
- Fix the case where HiP is given modules without absolute path via
  command line  or via icon launch (eg. *DefIcons*), and the added
  files can't be opened. Now works.
- Another relative vs. absolute path fix. When adding files so that
  the filerequester path is relative it could be that Hippo was not
  able to open the added files.
  That is, a file was added with path "Modules/DrAwesome/mod.bud peculiar" 
  instead of "dh0:Modules/DrAwesome/mod.bud peculiar". 
- The default unzip command in prefs was changed to *c:unzip >nil: -jo "%s"*, 
  this allows opening zipped modules where the module is within a subdirectory.
  Previously such modules would not be found from the zip file.
- In Prefs the MPEGA settings were reported to display garbage at times, I 
  wasn't able to reproduce this but some additional checks were added, 
  maybe they will help.

## New (very old) known bugs:
- _VisualPrefs_ tool can be used to adjust window bottom and top
  border, and window and screen title bar heights. Hippo can get
  confused and displays some extra vertical space below the window title
  bar when these are adjusted.
  
## New supported music formats:

- Medley Sound and Future Player
  - The author of these and the superb Imploder themes
    Paul van der Valk has recently passed away. His sound was truly unique!
  - Future Player replayer adapted from Wanted Team EaglePlayer sources.
  - Medley Sound replayer ripped from Imploder 4.
- Ben Daglish
  - Also adapted from EaglePlayer sources by Wanted Team.
- DeliTracker Custom
  - There are hundreds of these modules available, with varying
    quality. Many modules work fine but some behave badly. They may do
    illegal memory accesses or crash speactacularly. The same happens
    also when played with DeliTracker.  
  - One version of _Lemmings_ tries to do file accesses to load
    separate sample files, this is not supporte by Hippo and will
    probably crash. 
  - A few modules do not get recognized as the important bits are not
    close enough to the start of the file. 
  - Minor issue: Some modules display the subsong range in the
    titlebar so that the first song is #2 instead of #1. 
- Beathoven Synthesizer
- Game Music Creator (Jumping Jack'Son!)
- Digital Mugician 1
- PumaTracker
- SidMon 2 (SidMon 1 is already supported)
- Delta Music 1 (Delta Music 2 is already supported)
 
## New features:

- _Prefs_ option for toggling button tooltips on and off. By default it is on.

- Support for _gzipped_ archives. You need to have a working
  gzip-application in path. (This was once supported but was removed
  at some point.)

- Recursive subdirectory scan when adding modules is now supported on
  kickstart 1.3. Previously only the top level files of the selected
  directories were added.

  This has only worked on kickstart 2.0 or newer until now, due to the
  usage of a kickstart 2.0 DOS-library specific function. This
  function was reimplemented using available kick 1.3 methods.
  
- New ARexx commands *CHOOSEPREV* and *CHOOSENEXT*. These work
  similarly as when the user presses arrow up and down to choose a
  module in the list. *GET VERS* command returns the app version. *GET
  VOLU* returns the current volume setting. 

- Favorite modules! You can now right click on a module to favorite
  it. Favorite modules are displayed in bold font. To view the
  favorites, there's a new button on top of the filebox slider gadget
  to click. It switches between normal listview and favorites view. 

  Favorites are automatically saved after the user has been idle for a while,
  or when exiting the program, to file "S:HippoFavorites.prg". This is
  a normal module program file. 

  To enable this feature toggle the _Favorite modules_ switch on the
  _General_ subpage in prefs. This feature probably doesn't make any
  sense if you are using floppies. 
  
------------------------------------------------------------------------------
------------------------------------------------------------------------------

# Changes from v2.45 (10.1.2000) to v2.46b (15.6.2021)

There was an actual user request (by daxb) in the English Amiga Board 
a few years back to remove the module list size restriction.
This turned out to be a fun challenge. The code assumed
the module list index to be a positive 16-bit number, and
also used the same index with some magic values to mean 
a few things. There were a lot of places to change to make this work. 
The restriction is now at 0x1ffff (131071), which is a crazy amount.

Such a large list eats a lot of memory and is quite slow to 
process, as it is a doubly linked list. List iteration
operations needed some optimization to be usable on an A500.
(Next challenge: get rid of the linked list approach.)

Random play bookkeeping previously worked only for lists of up 
to 8192 (0x1fff) modules, this limit is now removed as well.

I decided to challenge myself with some UI changes. The main window
buttons are quite cryptic with both left and right mouse button actions,
which I have conveniently forgot about. I implemented a modern feeling
tooltip which will pop up a helpful text for each button. 
Maybe this is the first tooltip on kick1.3?

Right clicks on the buttons don't really work like
left clicks. I don't know why the past-me left them like that, 
they're ugly and non-user friendly that way. I changed
the buttons to have a proper visualization for right clicks as well.

I also added a few wait pointers to places with long running operations.

Another thing that motivated me to do some hippo coding was the realization
that the multitasking approaches used in HiP are bad.
At the time I had no idea about thread safe programming. This could
lead to some random crashes at times due to bad luck with timing.

Exec provides semaphores to protect shared data,
so these were added to a lot of places. Some safety regarging
interrupts relying on some data was also added. 
External applications using the HippoPort still use all data freely.

## Fixes:
- Extraneous requester pop up removed when loading TFMX modules.
- Fixed a case where unpacked modules were not identified as modules, or 
  a non-module file was identified as a valid module (due to badly initialized
  memory).
- A memory leak removed from the file requester.
- Memory usage is lowered in several situations:
  - Random play bookkeeping now uses a dynamically allocated table.
  - Each modulelist entry is now about 30 bytes smaller, for 1000
    modules that means memory savings of about 30 kB! :-)
  - Unnecessary library loading removed from startup. This also speeds
    up starting on slow machines. 
- Improved stability
  - Starting and stopping playback and loading modules like a crazy
    person is now not so   prone to crashing. This is achieved by
    adding exclusive access checks to module data and module list in
    several places (see above). 
- Other general bad behaviour removed from many places, not directly
  visible to user.     
- May survive low memory situations better when loading module
  programs or adding files. 
- A bunch of smaller fixes, such as enforcer hit removals at a few places.
- Code refactoring! It's still quite a mess in many places.
